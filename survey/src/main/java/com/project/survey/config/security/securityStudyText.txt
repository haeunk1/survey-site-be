#스프링 시큐리티 이론 헷갈린다..
#정리하면서 작성해보자

1.Authentication
- 현재 접근하는 주체의 정보와 권한을 담는 인터페이스
>> Collection<? extends GrantedAuthority> getAuthorityes(); //현재 사용자의 권한 목록을 가져옴
>> Object getCredentials(); //credentials(주로 비밀번호)를 가져옴
>> Object getDetails();
>> Object getPrincipal(); //Principal 객체를 가져옴
>> boolean isAuthenticated(); // 인증 여부를 가져옴
>> void setAuthenticated(bool isAuthenticated) throws IllegalArgumentException; //인증여부를 설정함

2.SecurityContext
- Authentication을 보관하는 역할, SecurityContext를 통해 Authentication 객체 꺼내올 수 있음.

3.SecurityContextHolder
- 보안 주체의 세부 정보를 포함하여 응용프로그램의 현재 보안 컨텍스트에 대한 세부 정보 저장

인증에 성공하면 Principal과 credentials정보를 Authentication에 담는다.
Spring Security에서 Authentication을 SecurityContext에 보관.
SpringContext를 SecurityContextHolder에 담아 보관.

==========================================================
***이 부분 아직 이해 안 감
[UserDetails]
인증에 성공하여 생성된 UserDetails 객체는 Authentication 객체를 구현한
UsernamePasswordAuthenticationToken을 생성하기 위해 사용됨.
(UserDetailsImpl.java로 작성) 

[UserDetailsService]
UserDetails 객체를 반환하는 하나의 메서드만 존재,
>> UserDetails loadUserByUserName(String username) throws UsernameNotFoundException;
사용자 정보를 조회





